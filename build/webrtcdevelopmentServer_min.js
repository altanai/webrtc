exports.redisscipts=function(){const a=require("redis"),b=require("redis-server");return module.startServer=function(){const a=process.env.REDIS_PORT||6379,c=new b(a);c.open(a=>{null===a&&(console.log("----------------Redis----------------------"),console.log("[Redis] Redis server started"))})},module.startclient=function(){const b=a.createClient();return b.on("error",function(a){console.error(a)}),b.set("key","value",a.print),b.get("key",a.print),b},module};
exports.realtimecomm=function(a,b){async function c(a){try{var c=d[a.userid],e={};c&&c.extra&&(e=c.extra);let f={socket:a,connectedWith:{},isPublic:!1,extra:e||{}};if(b){const c=await b.hset(a.userid,"data",f);console.log(c)}else d[a.userid]=f}catch(a){console.error(a)}}var d={},e={},f={},g=[],h={};console.log("[RealtimeComm] ----------------realtimecomm----------------------"),console.log("[RealtimeComm] env => "+process.env.enviornment+" running at "+process.env.wssPort);const k=require("https").createServer(a,(a,b)=>{console.log("req"),b.writeHeader(200,{"Content-Type":"text/plain"}),b.write("test"),b.end()}),l=require("socket.io")(k,{path:"/",serveClient:!1,pingInterval:1e4,pingTimeout:5e3,cookie:!1});return l.on("connection",function(a){function b(b){try{if(!d[b.sender])return void a.emit("user-not-found",b.sender);b.message.userLeft||d[b.sender].connectedWith[b.remoteUserId]||!d[b.remoteUserId]||(d[b.sender].connectedWith[b.remoteUserId]=d[b.remoteUserId].socket,d[b.sender].socket.emit("user-connected",b.remoteUserId),!d[b.remoteUserId]&&(d[b.remoteUserId]={socket:null,connectedWith:{},isPublic:!1,extra:{}}),d[b.remoteUserId].connectedWith[b.sender]=a,d[b.remoteUserId].socket&&d[b.remoteUserId].socket.emit("user-connected",b.sender)),d[b.sender].connectedWith[b.remoteUserId]&&d[a.userid]&&(b.extra=d[a.userid].extra,d[b.sender].connectedWith[b.remoteUserId].emit(k,b))}catch(a){console.error("onMessageCallback",a)}}let h=a.handshake.query;var k=h.msgEvent||"RTCMultiConnection-Message";a.userid=h.userid,c(a),a.on("ping-webrtcdev",()=>{console.log(" sending pong for ping"),a.emit("pong-webrtcdev")}),a.on("extra-data-updated",function(b){try{if(!d[a.userid])return;for(var c in d[a.userid].extra=b,d[a.userid].connectedWith)d[c].socket.emit("extra-data-updated",a.userid,b)}catch(a){console.error("extra-data-updated",a)}}),a.on("changed-uuid",function(b,e){if(e=e||function(){},h.dontUpdateUserId)return void delete h.dontUpdateUserId;try{if(d[a.userid]&&d[a.userid].socket.id==a.userid){if(b===a.userid)return;var f=a.userid;return d[b]=d[f],d[b].socket.userid=a.userid=b,delete d[f],void e()}a.userid=b,c(a),e()}catch(a){console.error("changed-uuid",a)}}),a.on("set-password",function(b){try{d[a.userid]&&(d[a.userid].password=b)}catch(a){console.error("set-password",a)}}),a.on("disconnect-with",function(b,c){try{if(d[a.userid]&&d[a.userid].connectedWith[b]&&(delete d[a.userid].connectedWith[b],a.emit("user-disconnected",b)),!d[b])return c();d[b].connectedWith[a.userid]&&(delete d[b].connectedWith[a.userid],d[b].socket.emit("user-disconnected",a.userid)),c()}catch(a){console.error("disconnect-with",a)}}),a.on("close-entire-session",function(b){try{var c=d[a.userid].connectedWith;Object.keys(c).forEach(function(b){if(c[b]&&c[b].emit)try{c[b].emit("closed-entire-session",a.userid,d[a.userid].extra)}catch(a){}}),delete e[a.userid],b()}catch(a){console.error("close-entire-session",a)}}),a.on("check-presence",function(b,c){if(b===a.userid&&!!d[b])return void c(!1,a.userid,d[b].extra);var e={};d[b]&&(e=d[b].extra),c(!!d[b],b,e)}),a.on("open-channel",function(b){console.log("------------open channel------------- ",b.channel," by ",b.sender);var c=null;b.channel?c=b.channel:console.log(" Err :  channel is empty"),0>g.indexOf(c)?(g.push(c),console.log("registered new in channels ",g)):console.log("channel already exists channels ",g);try{f[c]={channel:c,timestamp:new Date().toLocaleString(),maxAllowed:b.maxAllowed||100,users:[b.sender],status:"waiting",endtimestamp:0,log:[new Date().toLocaleString()+":-channel created . User "+b.sender+" waiting "]},console.log("information added to channel",f)}catch(a){console.error(" Err : info couldnt be added to channel ",a)}var d={status:!0,channel:c};a.emit("open-channel-resp",d)}),a.on("open-channel-screenshare",function(b){console.log("------------open channel screenshare------------- ",b.channel," by ",b.sender);var c={status:!0,channel:b.channel};a.emit("open-channel-screenshare-resp",c)}),a.on("join-channel",function(b){var c=!1,d=b.channel;if((f[b.channel].users.length<f[b.channel].maxAllowed||"unlimited"==f[b.channel].maxAllowed)&&(c=!0),console.log("------------join channel------------- ",b.channel," by ",b.sender," isallowed ",c),c){f[b.channel].users.push(b.sender),f[b.channel].status=f[b.channel].users.length+" active members",f[b.channel].log.push(new Date().toLocaleString()+":-User "+b.sender+" joined the channel ");let c={status:!0,channel:b.channel,users:f[b.channel].users};a.emit("join-channel-resp",c);a.broadcast.emit("channel-event",{status:!0,type:"new-join",msgtype:"success",data:b})}else{console.warn(" Not aloowed to join channel , maxAllowed : ",f[b.channel].maxAllowed," current-users : ",f[b.channel].users.length);a.emit("join-channel-resp",{status:!1,msgtype:"error",msg:"Sorry cant join this channel"});var e={status:!0,type:"new-join",msgtype:"error",msg:"Another user is trying to join this channel but max count [ "+f[b.channel].maxAllowed+" ] is reached"};a.broadcast.emit("channel-event",e)}}),a.on("update-channel",function(a){switch(console.log("------------update channel------------- ",a.channel," by ",a.sender," -> ",a),a.type){case"change-userid":var b=f[a.channel].users.indexOf(a.extra.old);console.log("old userid",f[a.channel].users[b]),f[a.channel].users[b]=a.extra.new,console.log("changed userid",f[a.channel].users);break;default:console.log("do nothing ");}}),a.on("presence",function(b){var c=!!f[b.channel];console.log(" Presence Check index of ",b.channel," is ",c),a.emit("presence",c)}),a.on("admin_enquire",function(b){switch(b.ask){case"channels":b.find?a.emit("response_to_admin_enquire",module.getChannel(b.find,b.format)):a.emit("response_to_admin_enquire",module.getAllChannels(b.format));break;case"users":a.emit("response_to_admin_enquire",module.getAllActiveUsers(b.format));break;case"channel_clients":a.emit("response_to_admin_enquire",module.getChannelClients(b.channel));break;default:a.emit("response_to_admin_enquire","no case matched ");}});var m=0;a.on(k,function(c,f){if(!(c.remoteUserId&&c.remoteUserId===a.userid))try{if(c.remoteUserId&&"system"!=c.remoteUserId&&c.message.newParticipationRequest&&d[c.remoteUserId]&&d[c.remoteUserId].password){if(3<m)return void a.emit("password-max-tries-over",c.remoteUserId);if(!c.password)return m++,void a.emit("join-with-password",c.remoteUserId);if(c.password!=d[c.remoteUserId].password)return m++,void a.emit("invalid-password",c.remoteUserId,c.password)}if(c.message.shiftedModerationControl)return c.message.firedOnLeave?void(e[c.sender]=c):void b(c);if("system"==c.remoteUserId&&c.message.detectPresence)return c.message.userid===a.userid?void f(!1,a.userid):void f(!!d[c.message.userid],c.message.userid);if(d[c.sender]||(d[c.sender]={socket:a,connectedWith:{},isPublic:!1,extra:{}}),c.message.newParticipationRequest){var g=0;return void function e(){return g++,120<g?void a.emit("user-not-found",c.remoteUserId):d[c.remoteUserId]&&d[c.remoteUserId].socket?void b(c):void setTimeout(e,1e3)}()}b(c)}catch(a){console.error("on-socketMessageEvent",a)}}),a.on("disconnect",function(){console.log("[RealtimeComm] disconnect");try{a.namespace&&delete a.namespace.sockets[this.id]}catch(a){console.error("disconnect",a)}try{let c=e[a.userid];c&&(delete e[c.userid],b(c))}catch(a){console.error("disconnect",a)}try{if(d[a.userid])for(var c in d[a.userid].connectedWith)d[a.userid].connectedWith[c].emit("user-disconnected",a.userid),d[c]&&d[c].connectedWith[a.userid]&&(delete d[c].connectedWith[a.userid],d[c].socket.emit("user-disconnected",a.userid))}catch(a){console.error("disconnect",a)}delete d[a.userid]}),module.socket=l}),l.on("error",a=>{console.error(a)}),l.on("disconnect",()=>{console.error("disconnected ")}),k.listen(process.env.wssPort),module.getAll=function(a){let b=[];for(i in f)b.push(f[i]);return{response:"channels",channels:b,format:a}},module.getAllChannels=function(a){var b=[];for(i in Object.keys(f))b.push(Object.keys(f)[i]);return{response:"all",channelinfo:b,format:a}},module.getChannel=function(a,b){var c={response:"channel",channelinfo:f[a]?f[a]:null,format:b};return c},module.getAllActiveUsers=function(a){var b=[];for(i in Object.keys(f)){var c=Object.keys(f)[i];for(j in f[c].users)b.push(f[c].users[j])}return{response:"users",users:b,format:a}},module.getUser=function(a,b){let c={response:"users",users:h[a]?h[a]:"notfound",format:b};return c},module.getChannelClients=function(a){let b={response:"users",clients:l.of("/"+a).clients(),format:data.format};return b},module};
exports.restapi=function(a,b){var c=require("restify"),d=c.createServer(b);return d.use(function(a,b,c){return b.header("Access-Control-Allow-Origin","*"),b.header("Access-Control-Allow-Headers","X-Requested-With"),c()}),d.use(c.plugins.acceptParser(d.acceptable)),d.use(c.plugins.dateParser()),d.use(c.plugins.queryParser()),d.use(c.plugins.bodyParser({mapParams:!0})),d.get("/webrtc/details",function(a,b){console.log("params----------",a.params),b.json({type:!0,data:a.params.version})}),d.get("/session/all-sessions",function(b,c){var d=a.getAllChannels("json");c.json({type:!0,data:d})}),d.get("/session/getsession/:channelid",function(b,c){if(console.log(" [ Rest api - getSession ]  logs for ",b.params.channelid),!b.params.channelid)return void c.json({type:!0,data:"channelid is required"});var d=a.getChannel(b.params.channelid,"json");c.json({type:!0,data:d})}),d.get("/session/clients",function(b,c){var d=a.getChannelClients("json");c.json({type:!0,data:d})}),d.get("/user/all-users",function(b,c){var d=a.getAllActiveUsers("json");c.json({type:!0,data:d})}),d.get("/user/getuser/:userid",function(b,c){if(console.log(" [ Rest api - getUser ]  logs for ",b.params.userid),!b.params.userid)return void c.json({type:!0,data:"userid is required"});var d=a.getUser(b.params.userid,"json");c.json({type:!0,data:d})}),d.on("MethodNotAllowed",function(a,b){if("options"===a.method.toLowerCase()){return-1===b.methods.indexOf("OPTIONS")&&b.methods.push("OPTIONS"),b.header("Access-Control-Allow-Credentials",!0),b.header("Access-Control-Allow-Headers",["Accept","Accept-Version","Content-Type","Api-Version","Origin","X-Requested-With"].join(", ")),b.header("Access-Control-Allow-Methods",b.methods.join(", ")),b.header("Access-Control-Allow-Origin",a.headers.origin),b.send(204)}return b.send(new c.MethodNotAllowedError)}),d.listen(process.env.restPort,function(){console.log("%s listening at %s",d.name,d.url)}),console.log("----------------------REST APIs ----------------"),console.log(" REST server env => "+process.env.enviornment+" running at\n "+process.env.restPort),module};